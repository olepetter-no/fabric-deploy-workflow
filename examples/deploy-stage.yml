name: Deploy to Staging

on:
  push:
    branches: [stage]
    paths:
      - 'fabric/**'              # adjust to match your real artifact dir
  workflow_dispatch:
    inputs:
      deploy_mode:
        description: 'Deployment mode (override default incremental)'
        type: choice
        options: ['incremental', 'full']
        default: 'incremental'
      unpublish_orphan_items:
        description: 'Unpublish orphan items from the workspace'
        type: boolean
        default: true
      standardize_default_lakehouse:
        description: 'Standardize default lakehouse references'
        type: boolean
        default: true
      update_deployment_tag:
        description: 'Create/update deployment tags for change tracking'
        type: boolean
        default: true
      verbose:
        description: 'Enable verbose (debug-level) output.'
        required: false
        type: boolean
        default: false

jobs:
  deploy-staging:
    # Safety: only run when the ref is stage
    if: github.ref == 'refs/heads/stage'
    environment: stage
    permissions:
      contents: write  # Required for pushing git tags
      id-token: write  # Required for Azure authentication
    uses: olepetter-no/fabric-deploy-workflow/.github/workflows/fabric-deploy.yml@v1.0.0
    with:
      workspace_id: ${{ vars.STAGE_FABRIC_WORKSPACE_ID }}
      source_directory: './fabric'                             # keep consistent with push paths
      environment: 'stage'
      # Default to incremental on push; allow override when manually dispatched
      deploy_mode: ${{ github.event_name == 'workflow_dispatch' && inputs.deploy_mode || 'incremental' }}
      unpublish_orphan_items: ${{ github.event_name == 'workflow_dispatch' && inputs.unpublish_orphan_items || true }}
      standardize_default_lakehouse: ${{ github.event_name == 'workflow_dispatch' && inputs.standardize_default_lakehouse || false }}
      update_deployment_tag: ${{ github.event_name == 'workflow_dispatch' && inputs.update_deployment_tag || true }}
      verbose: ${{ github.event_name == 'workflow_dispatch' && inputs.verbose || false }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
