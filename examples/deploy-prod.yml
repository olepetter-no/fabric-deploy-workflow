name: Deploy to Fabric Prod Workspace

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Perform a dry run without making changes'
        type: boolean
        default: false
      verbose:
        description: 'Enable verbose (debug-level) output'
        type: boolean
        default: false

concurrency:
  group: deploy-fabric-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

defaults:
  run:
    shell: bash -euo pipefail

jobs:
  resolve-vars:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: prod
    outputs:
      workspace_id: ${{ steps.set.outputs.workspace_id }}
    steps:
      - id: set
        shell: bash
        run: echo "workspace_id=${{ vars.PROD_FABRIC_WORKSPACE_ID }}" >> "$GITHUB_OUTPUT"

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: resolve-vars
    permissions:
      contents: write
      id-token: write
    uses: olepetter-no/fabric-deploy-workflow/.github/workflows/fabric-deploy.yml@main
    with:
      workspace_id: ${{ needs.resolve-vars.outputs.workspace_id }}
      source_directory: './fabric'
      environment: 'prod'
      deploy_mode: 'full'
      unpublish_orphan_items: true
      standardize_default_lakehouse: true
      update_tag: true
      dry_run: ${{ inputs.dry_run }}
      verbose: ${{ inputs.verbose }}
    secrets:
      AZURE_CLIENT_ID:     ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID:     ${{ secrets.AZURE_TENANT_ID }}
